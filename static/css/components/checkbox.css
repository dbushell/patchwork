.Radio,
.Checkbox {
  --background-color: var(--color-bg-2);
  --border-color: var(--color-primary);
  --border-radius: var(--radius-1);
  --border-width: var(--border-size-1);
  --color: var(--color-text);
  --opacity-checked: 1;
  --font-size: var(--font-size-0);
  --line-height: 1.4;
  --size: var(--size-5);
  --block-size: var(--size);
  --inline-size: var(--size);
  display: block;
  position: relative;

  & > span {
    display: block;
    color: var(--color);
    font-size: var(--font-size);
    font-weight: 400;
    line-height: var(--line-height);
    padding-inline-start: calc(var(--inline-size) + (var(--size-2)));
    user-select: none;

    :where(.Button) & {
      font-size: inherit;
      line-height: inherit;
    }

    &::after,
    &::before {
      content: '';
      display: block;
      block-size: var(--block-size);
      inline-size: var(--inline-size);
      border-radius: var(--border-radius);
      inset-block-start: 50%;
      inset-inline-start: 0;
      position: absolute;
      transform: translateY(-50%);
    }

    &::before {
      background-color: var(--background-color);
      border: var(--border-width) solid var(--border-color);
    }

    &::after {
      background-color: var(--color-text);
      opacity: 0;
      transition: opacity 200ms;
    }
  }

  & input:checked + span {
    &::after {
      opacity: var(--opacity-checked);
    }
  }

  /* &:has(input:focus-visible) */
  & input:focus-visible + span {
    &::before {
      outline: var(--focus-outline);
      outline-offset: var(--size-0);
    }
  }

  &:has(input:disabled) {
    --border-color: var(--color-text) / 0.5;
    --background-color: var(--color-bg-4);
    --color: var(--color-text) / 0.5;
    --opacity-checked: 0.5;
    pointer-events: none;
  }
}

.Checkbox {
  --checkbox-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="white" d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z"/></svg>');

  & > span {
    &::after {
      mask-image: var(--checkbox-image);
    }
  }
}

.Checkbox:has([switch]) {
  --inline-size: calc((var(--size) * 1.7));

  & > span {
    &::after {
      --block-size: calc(var(--size) * 0.7);
      --inline-size: calc(var(--size) * 0.7);
      --border-radius: var(--radius-0);
      background-image: var(--checkbox-image);
      background-color: var(--color-text);
      inset-block-start: 50%;
      inset-inline-start: calc((var(--size) - (var(--size) * 0.7)) * 0.5);
      transition: background-color 200ms, opacity 200ms, transform 200ms;
      transform: translateY(-50%);
      transform-origin: 50% 50%;
      mask-image: none;
      opacity: 0.5;
    }
  }

  & input:not(:checked) + span {
    &::after {
      background-size: 0 0;
    }
  }

  & input:checked + span {
    &::after {
      background-color: var(--color-primary);
      transform: translateY(-50%) translateX(100%);
    }

    &:dir(rtl)::after {
      transform: translateY(-50%) translateX(-100%);
    }
  }

  & input:disabled + span {
    &::after {
      background-color: var(--color-text);
      background-size: 0 0;
    }
  }
}

.Radio {
  --block-size: calc(var(--size) + 2px);
  --inline-size: calc(var(--size) + 2px);
  --border-radius: 100%;

  & > span {
    &::after,
    &::before {
      inset-inline-start: -1px;
    }

    &::after {
      --block-size: calc(var(--size) * 0.6);
      --inline-size: calc(var(--size) * 0.6);
      background: var(--color-text);
      inset-block-start: 50%;
      inset-inline-start: calc((var(--size) - (var(--size) * 0.6)) * 0.5);
      transform: translateY(-50%);
    }
  }
}
