.Grid {
  --grid-columns: 10;
  --grid-column-gap: var(--size-5);
  --grid-row-gap: var(--size-6);
  --grid-main: clamp(0px, calc(100% - (var(--grid-column-gap) * 2)), 1440px);
  --grid-column: calc(
    (var(--grid-main) - (var(--grid-column-gap) * ((var(--grid-columns) - 1)))) /
      var(--grid-columns)
  );
  --grid-template-basic: [outer-start] auto [inner-start main-start]
    var(--grid-main) [main-end inner-end] auto [outer-end];
  --grid-template-advanced: var(--grid-template-basic);
  --grid-template: var(--grid-template-advanced);

  container-name: grid;
  container-type: inline-size;
  display: grid;
  column-gap: var(--grid-column-gap);
  grid-template-columns: var(--grid-template);
  inline-size: 100%;
  position: relative;
  row-gap: var(--grid-row-gap);

  :where(&) > * {
    grid-column: main-start / main-end;
  }
}

@container root (inline-size >= 900px) {
  .Grid {
    --grid-aside-columns: 3;
    --grid-main-columns: 7;
    --grid-template-advanced: [outer-start] auto [inner-start aside-start]
      repeat(var(--grid-aside-columns), var(--grid-column)) [aside-end
      main-start] repeat(var(--grid-main-columns), var(--grid-column)) [main-end
      inner-end] auto [outer-end];
  }
}

@container root (inline-size >= 1200px) {
  .Grid {
    --grid-aside-columns: 2;
    --grid-main-columns: 8;
  }
}
